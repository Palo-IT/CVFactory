# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build_and_test:
    docker:
      # specify the version you desire here
      - image: circleci/node:8
      
    environment:
      PATH:/pandoc/bin:$PATH

    steps:
      - checkout

      - run: sudo apt-get update && sudo apt-get -y install libssl-dev && sudo apt-get -y clean

      - run: yarn install

      - run: yarn global add nodemon

      - run: echo $(pwd) && echo $(ls -l)

  deploy_to_staging:
    docker:
      - image: google/cloud-sdk
    environment:
      - PROJECT_NAME: "cvfactory"
    steps:
      - checkout
      - run: 
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud config set project ${GOOGLE_PROJECT_ID}
            gcloud config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - setup_remote_docker
      - run: 
          name: Docker build and push
          command: |
            docker build \
              --build-arg COMMIT_REF=${CIRCLE_SHA1} \
              --build-arg BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”` \
              -t ${PROJECT_NAME} .
            docker images
            docker tag ${PROJECT_NAME} eu.gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1}
            docker images
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://eu.gcr.io
            docker push eu.gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1}
      - run: 
          name: Deploy to Kubernetes
          command: |
            kubectl run ${PROJECT_NAME} --image=push eu.gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1} --port 80
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_and_test
      - deploy_to_staging:
          requires:
            - build_and_test
          filters:
            branches:
              only: master
